plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

def allureVersion = '2.29.0'
def aspectJVersion = '1.9.22'


repositories {
    mavenCentral()
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.platform:junit-platform-suite-api'
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testImplementation 'org.seleniumhq.selenium:selenium-java:4.35.0'
    implementation("com.beust:jcommander:1.82")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.2")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.2")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.2")
    implementation("com.mysql:mysql-connector-j:8.3.0")
    implementation'org.hibernate:hibernate-core:6.3.0.CR1'

    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")

    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-junit5"
}

test {
    useJUnitPlatform()
    if(project.hasProperty("browser")){
        systemProperty("browser", project.property("browser"))
    }
    if(project.hasProperty("target")){
        systemProperty("target", project.property("target"))
    }

    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]

}