{"uuid":"851b0bfb-4a70-4ccb-b5c2-7358cf06c466","historyId":"9fddc0c3180f7832385deda200c1fdf4","testCaseId":"[engine:junit-jupiter]/[class:tests.CreateContactTest]/[method:createContactInGroupWithAdd()]","testCaseName":"createContactInGroupWithAdd()","fullName":"tests.CreateContactTest.createContactInGroupWithAdd","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:tests.CreateContactTest]/[method:createContactInGroupWithAdd()]"},{"name":"host","value":"DESKTOP-NAPC2I5"},{"name":"thread","value":"7048@DESKTOP-NAPC2I5.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"tests.CreateContactTest"},{"name":"testClass","value":"tests.CreateContactTest"},{"name":"testMethod","value":"createContactInGroupWithAdd"},{"name":"suite","value":"tests.CreateContactTest"}],"links":[],"name":"createContactInGroupWithAdd()","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected: <[ContactData(id=285, firstName=Ольга, middleName=, lastName=Иванова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(377)-7769360, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=286, firstName=Алексей, middleName=, lastName=Петров, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(527)-7016851, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=287, firstName=Анна, middleName=, lastName=Смирнова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(507)-0815603, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]> but was: <[ContactData(id=286, firstName=Алексей, middleName=, lastName=Петров, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(527)-7016851, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=287, firstName=Анна, middleName=, lastName=Смирнова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(507)-0815603, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=287, firstName=Ольга, middleName=, lastName=Иванова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(507)-0815603, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]>","trace":"org.opentest4j.AssertionFailedError: expected: <[ContactData(id=285, firstName=Ольга, middleName=, lastName=Иванова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(377)-7769360, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=286, firstName=Алексей, middleName=, lastName=Петров, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(527)-7016851, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=287, firstName=Анна, middleName=, lastName=Смирнова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(507)-0815603, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]> but was: <[ContactData(id=286, firstName=Алексей, middleName=, lastName=Петров, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(527)-7016851, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=287, firstName=Анна, middleName=, lastName=Смирнова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(507)-0815603, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=287, firstName=Ольга, middleName=, lastName=Иванова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(507)-0815603, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)\r\n\tat tests.CreateContactTest.createContactInGroupWithAdd(CreateContactTest.java:161)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1758343880206,"stop":1758343880702}