{"uuid":"fe55cf6f-ebe7-470c-a275-9f51d98a34c3","historyId":"9fddc0c3180f7832385deda200c1fdf4","testCaseId":"[engine:junit-jupiter]/[class:tests.CreateContactTest]/[method:createContactInGroupWithAdd()]","testCaseName":"createContactInGroupWithAdd()","fullName":"tests.CreateContactTest.createContactInGroupWithAdd","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:tests.CreateContactTest]/[method:createContactInGroupWithAdd()]"},{"name":"host","value":"DESKTOP-NAPC2I5"},{"name":"thread","value":"5004@DESKTOP-NAPC2I5.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"tests.CreateContactTest"},{"name":"testClass","value":"tests.CreateContactTest"},{"name":"testMethod","value":"createContactInGroupWithAdd"},{"name":"suite","value":"tests.CreateContactTest"}],"links":[],"name":"createContactInGroupWithAdd()","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected: <[ContactData(id=235, firstName=Анна, middleName=, lastName=Петрова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(500)-1802065, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=238, firstName=Алексей, middleName=, lastName=Сидоров, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(598)-2099547, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=239, firstName=Елена, middleName=, lastName=Петрова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(959)-9202605, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]> but was: <[ContactData(id=238, firstName=Алексей, middleName=, lastName=Сидоров, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(598)-2099547, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=239, firstName=Елена, middleName=, lastName=Петрова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(959)-9202605, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=239, firstName=Анна, middleName=, lastName=Петрова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(959)-9202605, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]>","trace":"org.opentest4j.AssertionFailedError: expected: <[ContactData(id=235, firstName=Анна, middleName=, lastName=Петрова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(500)-1802065, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=238, firstName=Алексей, middleName=, lastName=Сидоров, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(598)-2099547, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=239, firstName=Елена, middleName=, lastName=Петрова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(959)-9202605, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]> but was: <[ContactData(id=238, firstName=Алексей, middleName=, lastName=Сидоров, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(598)-2099547, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=239, firstName=Елена, middleName=, lastName=Петрова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(959)-9202605, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=239, firstName=Анна, middleName=, lastName=Петрова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(959)-9202605, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)\r\n\tat tests.CreateContactTest.createContactInGroupWithAdd(CreateContactTest.java:161)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1597)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1597)\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1758337089186,"stop":1758337089676}