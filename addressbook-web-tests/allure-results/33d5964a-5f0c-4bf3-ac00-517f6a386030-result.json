{"uuid":"33d5964a-5f0c-4bf3-ac00-517f6a386030","historyId":"9fddc0c3180f7832385deda200c1fdf4","testCaseId":"[engine:junit-jupiter]/[class:tests.CreateContactTest]/[method:createContactInGroupWithAdd()]","testCaseName":"createContactInGroupWithAdd()","fullName":"tests.CreateContactTest.createContactInGroupWithAdd","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:tests.CreateContactTest]/[method:createContactInGroupWithAdd()]"},{"name":"host","value":"DESKTOP-NAPC2I5"},{"name":"thread","value":"19756@DESKTOP-NAPC2I5.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"tests.CreateContactTest"},{"name":"testClass","value":"tests.CreateContactTest"},{"name":"testMethod","value":"createContactInGroupWithAdd"},{"name":"suite","value":"tests.CreateContactTest"}],"links":[],"name":"createContactInGroupWithAdd()","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected: <[ContactData(id=319, firstName=Наталья, middleName=, lastName=Смирнова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(360)-9163002, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=322, firstName=Павел, middleName=, lastName=Кузнецов, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(480)-8751530, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=323, firstName=Анна, middleName=, lastName=Сидорова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(242)-4058032, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]> but was: <[ContactData(id=322, firstName=Павел, middleName=, lastName=Кузнецов, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(480)-8751530, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=323, firstName=Анна, middleName=, lastName=Сидорова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(242)-4058032, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=323, firstName=Наталья, middleName=, lastName=Смирнова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(242)-4058032, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]>","trace":"org.opentest4j.AssertionFailedError: expected: <[ContactData(id=319, firstName=Наталья, middleName=, lastName=Смирнова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(360)-9163002, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=322, firstName=Павел, middleName=, lastName=Кузнецов, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(480)-8751530, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=323, firstName=Анна, middleName=, lastName=Сидорова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(242)-4058032, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]> but was: <[ContactData(id=322, firstName=Павел, middleName=, lastName=Кузнецов, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(480)-8751530, work=, fax=, mail=john.doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=323, firstName=Анна, middleName=, lastName=Сидорова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(242)-4058032, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=), ContactData(id=323, firstName=Наталья, middleName=, lastName=Смирнова, nickName=, photo=null, title=, company=, address=123 Elm Street, home=, mobile=8(242)-4058032, work=, fax=, mail=Jane.Doe@example.com, mailTwo=, mailThree=, homepage=, birthDay=0, birthMonth=-, birthYear=, anniversaryDay=0, anniversaryMonth=-, anniversaryYear=)]>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)\r\n\tat tests.CreateContactTest.createContactInGroupWithAdd(CreateContactTest.java:161)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n"},"stage":"finished","description":"","steps":[{"name":"getCountContactWithoutGroup","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1758344793756,"stop":1758344793759},{"name":"getGroupCountJdbc","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1758344793759,"stop":1758344793761},{"name":"getGroupListJdbc","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1758344793761,"stop":1758344793763},{"name":"findContactWithoutGroup","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1758344793763,"stop":1758344793765},{"name":"getContactsInGroups","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"group","value":"GroupData[id=53, name=group_name, header=group_header, footer=group_footer]"}],"start":1758344793768,"stop":1758344793770},{"name":"getContactsInGroups","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"group","value":"GroupData[id=53, name=group_name, header=group_header, footer=group_footer]"}],"start":1758344794237,"stop":1758344794240},{"name":"consistency","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1758344794244,"stop":1758344794247}],"attachments":[],"parameters":[],"start":1758344793755,"stop":1758344794250}